#!/bin/bash

NORMAL_DELAY=3
SLOW_DELAY=100
TIME_LIMIT=600

FAILED_LIST="failed_downloads.txt"
ARCHIVE_FILE="downloaded.txt"

FORMAT="best[height<=360][protocol!=m3u8]/best[height<=480]/best"

if [ "$#" -eq 0 ]; then
    echo "Использование: $0 <channel_url>"
    exit 1
fi

touch "$FAILED_LIST"

echo "Получение списка видео с канала..."
mapfile -t VIDEO_IDS < <(yt-dlp --flat-playlist --get-id "$@")

echo "Найдено ${#VIDEO_IDS[@]} видео. Начинаю скачивание..."

for VIDEO_ID in "${VIDEO_IDS[@]}"; do
    VIDEO_URL="https://www.youtube.com/watch?v=$VIDEO_ID"
    echo "➡️ Скачиваю: $VIDEO_URL"

    COUNT_BEFORE=$(find "$(pwd)" -maxdepth 1 -type f \( -iname "*.mp4" -o -iname "*.mkv" -o -iname "*.webm" \) | wc -l)

    timeout $TIME_LIMIT yt-dlp -f "$FORMAT" \
        --fragment-retries 10 \
        --retries 1000 \
        --download-archive "$ARCHIVE_FILE" \
        --force-ipv4 \
        --legacy-server-connect \
        --throttled-rate 500K \
        --concurrent-fragments 4 \
        --cookies-from-browser chromium \
        --socket-timeout 1 \
        "$VIDEO_URL"

    EXIT_CODE=$?

    COUNT_AFTER=$(find "$(pwd)" -maxdepth 1 -type f \( -iname "*.mp4" -o -iname "*.mkv" -o -iname "*.webm" \) | wc -l)

    if [ $EXIT_CODE -eq 124 ]; then
        echo "⏰ Таймаут при загрузке $VIDEO_URL. Сохраняю в $FAILED_LIST"
        echo "$VIDEO_URL" >> "$FAILED_LIST"
        echo "⌛ Жду $SLOW_DELAY секунд перед следующим..."
        sleep $SLOW_DELAY
    elif [ $EXIT_CODE -ne 0 ]; then
        echo "❌ Ошибка при загрузке $VIDEO_URL. Сохраняю в $FAILED_LIST"
        echo "$VIDEO_URL" >> "$FAILED_LIST"
        echo "⌛ Жду $NORMAL_DELAY секунд перед следующим..."
        sleep $NORMAL_DELAY
    elif [ $COUNT_AFTER -gt $COUNT_BEFORE ]; then
        echo "✅ Видео скачано. Жду $NORMAL_DELAY секунд..."
        sleep $NORMAL_DELAY
    else
        echo "✅ Видео уже было скачано. Переход без задержки."
    fi
done

echo "✅ Загрузка завершена."

if [ -s "$FAILED_LIST" ]; then
    echo "⚠️ Некоторые видео не были скачаны:"
    cat "$FAILED_LIST"
fi
